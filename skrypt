[Console]::OutputEncoding = [System.Text.Encoding]::UTF8

$serverListPath = "servers.txt"
$username = ".\user"
$password = "haslo123"
$driveLetter = "Z:"
$sleepSeconds = 1
$outputFile = "results.txt"

# Clear output file at start
"" | Out-File -Encoding UTF8 $outputFile

function Print-UncLike {
    param (
        [string]$rootPath,
        [string]$baseUnc,
        [int]$sleep = 0
    )

    Write-Host "$baseUnc"
    Add-Content -Path $outputFile -Value "$baseUnc"

    Get-ChildItem -Path $rootPath -Recurse -Depth 2 -Force -ErrorAction SilentlyContinue | ForEach-Object {
        $relative = $_.FullName.Substring($rootPath.Length).TrimStart('\')
        $fullUnc = "$baseUnc\$relative"
        Write-Host $fullUnc
        Add-Content -Path $outputFile -Value $fullUnc
        if ($sleep -gt 0) {
            # Start-Sleep -Seconds $sleep
        }
    }
}

if (!(Test-Path $serverListPath)) {
    Write-Host "File $serverListPath not found." -ForegroundColor Red
    exit
}

$servers = Get-Content $serverListPath | Where-Object { $_.Trim() -ne "" }

foreach ($server in $servers) {
    $server = $server.Trim()
    Write-Host "`n=== Server: $server ==="

    $sharesOutput = net view \\$server 2>&1
    Start-Sleep -Seconds $sleepSeconds

    if ($sharesOutput -match ".l.d systemu|Nie mo.na odnale.|System error|The network path was not found") {
        Write-Host "[BLAD] Nie mozna pobrac udzialow z $server - pomijam." -ForegroundColor Red
        continue
    }

    $shares = @()
    foreach ($line in $sharesOutput) {
        if ($line -match "\s+(Dysk|Disk)\s*$") {
            $shareName = ($line -split "\s+")[0]
            $shares += $shareName
        }
    }

    foreach ($shareName in $shares) {
        $remotePath = "\\$server\$shareName"
        Write-Host "`n[INFO] Sprawdzanie udzialu: $remotePath"

        if (Test-Path "$driveLetter\") {
            Write-Host "[INFO] Litera $driveLetter zajeta - pomijam $shareName"
            continue
        }

        $result = net use $driveLetter $remotePath 2>&1
        Start-Sleep -Seconds $sleepSeconds 

        if ($result -match "Polecenie zosta.o wykonane pomy.lnie|The command completed successfully") {
            Write-Host "[OK] Zmapowano $remotePath. Zawartosc:"
            Print-UncLike -rootPath "$driveLetter\" -baseUnc $remotePath -sleep $sleepSeconds
            net use $driveLetter /delete > $null
        } else {
            Write-Host "[BLAD] Mapowanie udzialu $remotePath nie powiodlo sie:" -ForegroundColor Red
            Write-Host $result -ForegroundColor DarkRed
        }

        Start-Sleep -Seconds $sleepSeconds  
    }

    Start-Sleep -Seconds $sleepSeconds 
}
